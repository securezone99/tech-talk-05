server {

    # Disable unwanted methods
    if ($request_method !~ ^(GET|HEAD|POST|PUT|PATCH|DELETE|OPTIONS)$ )
    {
            return 405;
    }

    root /usr/share/nginx/html;

    listen       80;
    server_name  localhost;

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to index (instead of displaying 404)
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html =404;
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval'; img-src 'self' blob: data:; font-src 'self'; style-src 'self' 'unsafe-eval' 'unsafe-inline'; child-src 'self' ###OPENID_HOST###; frame-src 'self' ###OPENID_HOST###; frame-ancestors 'self'; connect-src 'self' blob: ###BACKEND_INGRESS_PLACEHOLDER### ###OPENID_HOST###";
        add_header X-Frame-Options DENY;
    }

    error_page   500 502 503 504  /50x.html;

    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location = /index.html {
      add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval'; img-src 'self' blob: data:; font-src 'self'; style-src 'self' 'unsafe-eval' 'unsafe-inline'; child-src 'self' ###OPENID_HOST###; frame-src 'self' ###OPENID_HOST###; frame-ancestors 'self'; connect-src 'self' blob: ###BACKEND_INGRESS_PLACEHOLDER### ###OPENID_HOST###";
      add_header X-Frame-Options DENY;
      expires off;
    }

    location /api/ {
     rewrite /api(/.*)$ $1 break;
      proxy_pass '###REST_API_URL###';
      proxy_connect_timeout 600;
      proxy_send_timeout 600;
      proxy_read_timeout 600;
      send_timeout 600;
    }

    location /ws/ {
      rewrite /ws(/.*)$ $1 break;
      proxy_pass '###REST_API_URL###';  # replace with your WebSocket server URL
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_connect_timeout 600;
      proxy_send_timeout 600;
      proxy_read_timeout 600;
      send_timeout 600;
    }
}
